[
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'GLOBE Observer Mosquito Habitats'",
            "as": "'title'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": {
                "type": "function",
                "name": "MERGE",
                "params": [
                    "'Moquito Habitats'",
                    "' '",
                    "mhm_Userid"
                ]
            },
            "as": "'dataStream.name'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'Sensor'",
            "as": "'dataStream.observationType'"
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "mhm_MeasuredAt",
                "'observation.resultCategoryObservation.phenomenonTime'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "mhm_measuredDate",
                "'observation.resultCategoryObservation.resultTime'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "mhm_WaterSourcePhotoUrls",
                "'observation.resultCategoryObservation.result'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "mhm_createDate",
                "'observation.resultCategoryObservation.submitTime'"
            ]
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'yes'",
            "as": "'observation.image.imageStatus'"
        }
    },
    {
        "transform": "nest",
        "parameters": {
            "col": [
                "mhm_elevation",
                "mhm_WaterSource"
            ],
            "into": "map",
            "as": "'observation.context.parameters'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'NA'",
            "as": "'omProcess.license.licenseName'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'https://www.globe.gov/documents/10157/2592674/GLOBE+Data+User+Guide_v1_final.pdf/863a971d-95c5-4dd9-b75c-46713f019088'",
            "as": "'omProcess.license.licenseURI'"
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "mhm_Userid",
                "'omProcess.license.licenseAttributionSource'"
            ]
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": {
                "type": "function",
                "name": "MERGE",
                "params": [
                    "'User: '",
                    "{omProcess.license.licenseAttributionSource}"
                ]
            },
            "as": "'column1'"
        }
    },
    {
        "transform": "drop",
        "parameters": {
            "col": "{omProcess.license.licenseAttributionSource}",
            "action": "Drop"
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "column1",
                "'omProcess.license.licenseAttributionSource'"
            ]
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'Global Learning and Observations to Benefit the Environment (GLOBE)'",
            "as": "'omProcess.license.licenseAttributionAggregator'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'yes'",
            "as": "'omProcess.resultQuality.validationStatus'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'Our Validation method is as follows: 1) GLOBE Observer App has its own validators to ensure the requested data type matches the received value. 2) GLOBE Observer Team validates the photos to ensure they are useful and match the area where the photographer took the photo. 3) Our pre-processing algorithms ensure values entered are appropriate and reasonable. Our code also creates quality assurance flag to allow Users to better summarize the data.'",
            "as": "'omProcess.resultQuality.validationMethod'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'FALSE (Entries with their photos undergoing GLOBE's validation process will have a 'pending' code for their photos. NOTE: Some entries' photos will be listed as 'rejected'. Photos that pass our validation process will include GLOBE's URL to that photo)'",
            "as": "'omProcess.resultQuality.validationResult'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'\"GLOBE Observer Data Guide: https://www.globe.gov/documents/10157/2592674/GLOBE+Data+User+Guide_v1_final.pdf/863a971d-95c5-4dd9-b75c-46713f019088 (Page 25)'",
            "as": "'omProcess.resultQuality.qualityDescription'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'research'",
            "as": "'omProcess.resultQuality.qualityGrade'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'Mosquito Habitats'",
            "as": "'observedProperty.name'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'Mosquito Habitats as documented by a photo'",
            "as": "'observedProperty.description'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'https://observer.globe.gov/toolkit/mosquito-habitat-mapper-toolkit'",
            "as": "'observedProperty.definition'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'NA'",
            "as": "'sensor.name'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'NA'",
            "as": "'sensor.description'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'NA'",
            "as": "'sensor.encodingType'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'NC'",
            "as": "'sensor.metadata'"
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "mhm_siteName",
                "'location.name'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "mhm_siteId",
                "'location.description'"
            ]
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'GeoJSON'",
            "as": "'location.encodingType'"
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "mhm_MGRSLatitude",
                "'location.locationDetails.stationaryProperties.latitude'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "mhm_MGRSLongitude",
                "'location.locationDetails.stationaryProperties.longitude'"
            ]
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "{omProcess.license.licenseAttributionSource}",
            "as": "'thing.name'"
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "mhm_organizationName",
                "'thing.description'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "mhm_GlobeTeams",
                "'thing.properties'"
            ]
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "{location.name}",
            "as": "'featureOfInterest.name'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "{location.description}",
            "as": "'featureOfInterest.description'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'GeoJSON'",
            "as": "'featureOfInterest.encodingType'"
        }
    },
    {
        "transform": "nest",
        "parameters": {
            "col": [
                "{location.locationDetails.stationaryProperties.latitude}",
                "{location.locationDetails.stationaryProperties.longitude}"
            ],
            "into": "map",
            "as": "'featureOfInterest.feature'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'Mosquito Habitat, NA, NC'",
            "as": "'dataStream.unitOfCategory'"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": {
                "type": "function",
                "name": "MERGE",
                "params": [
                    "'All data on '",
                    "{observedProperty.Name}",
                    "' from '",
                    "{sensor.Name}"
                ]
            },
            "as": "'dataStream.description'"
        }
    },
    {
        "transform": "move",
        "parameters": {
            "col": [
                "{dataStream.unitOfCategory}",
                "{observation.resultCategoryObservation.phenomenonTime}",
                "{observation.resultCategoryObservation.resultTime}",
                "{observation.resultCategoryObservation.result}",
                "{observation.resultCategoryObservation.submitTime}",
                "{observation.image.imageStatus}",
                "{observation.context.parameters}",
                "{omProcess.license.licenseName}",
                "{omProcess.license.licenseURI}",
                "{omProcess.license.licenseAttributionSource}",
                "{omProcess.license.licenseAttributionAggregator}",
                "{omProcess.resultQuality.validationStatus}",
                "{omProcess.resultQuality.validationMethod}",
                "{omProcess.resultQuality.validationResult}",
                "{omProcess.resultQuality.qualityDescription}",
                "{omProcess.resultQuality.qualityGrade}",
                "{observedProperty.name}",
                "{observedProperty.description}",
                "{observedProperty.definition}",
                "{sensor.name}",
                "{sensor.description}",
                "{sensor.encodingType}",
                "{sensor.metadata}",
                "{location.name}",
                "{location.description}",
                "{location.encodingType}",
                "{location.locationDetails.stationaryProperties.latitude}",
                "{location.locationDetails.stationaryProperties.longitude}",
                "{thing.name}",
                "{thing.description}",
                "{thing.properties}",
                "{featureOfInterest.name}",
                "{featureOfInterest.description}",
                "{featureOfInterest.encodingType}"
            ],
            "position": "after",
            "after": "{dataStream.unitOfCategory}"
        }
    },
    {
        "transform": "move",
        "parameters": {
            "col": "{featureOfInterest.feature}",
            "position": "after",
            "after": "{featureOfInterest.encodingType}"
        }
    },
    {
        "transform": "move",
        "parameters": {
            "col": [
                "title",
                "{dataStream.name}",
                "{dataStream.description}",
                "{dataStream.observationType}"
            ],
            "position": "before",
            "before": "{dataStream.unitOfCategory}"
        }
    },
    {
        "transform": "nest",
        "parameters": {
            "col": [
                "mhm_LarvaeCount",
                "mhm_LarvaeCountMagnitude",
                "mhm_LarvaeCountIsRangeFlag",
                "mhm_LarvaFullBodyPhotoUrls"
            ],
            "into": "map",
            "as": "'Larva Presence'"
        }
    },
    {
        "transform": "nest",
        "parameters": {
            "col": [
                "mhm_protocol",
                "mhm_updateDate",
                "mhm_publishDate",
                "mhm_organizationId",
                "mhm_countryName",
                "mhm_countryCode",
                "mhm_elevation",
                "mhm_pid",
                "mhm_ExtraData",
                "mhm_BreedingGroundEliminated",
                "mhm_AbdomenCloseupPhotoUrls",
                "mhm_MeasurementElevation",
                "mhm_MosquitoEggs",
                "mhm_Genus",
                "mhm_MosquitoEggCount",
                "mhm_WaterSource",
                "mhm_MosquitoAdults",
                "mhm_Species",
                "mhm_Comments",
                "mhm_MosquitoPupae",
                "mhm_DataSource",
                "mhm_Latitude",
                "mhm_LastIdentifyStage",
                "mhm_Longitude",
                "mhm_WaterSourceType",
                "mhm_MosquitoHabitatMapperId",
                "mhm_HasGenus",
                "mhm_IsGenusOfInterest",
                "mhm_IsWaterSourceContainer",
                "mhm_HasWaterSource"
            ],
            "into": "map",
            "as": "'raw context 1'"
        }
    },
    {
        "transform": "nest",
        "parameters": {
            "col": [
                "mhm_PhotoCount",
                "mhm_RejectedCount",
                "mhm_PendingCount",
                "mhm_PhotoBitBinary",
                "mhm_PhotoBitDecimal",
                "mhm_SubCompletenessScore",
                "mhm_CumulativeCompletenessScore"
            ],
            "into": "map",
            "as": "'raw context 2'"
        }
    },
    {
        "transform": "settype",
        "parameters": {
            "col": "{featureOfInterest.description}",
            "type": "String"
        }
    },
    {
        "transform": "replacepatterns",
        "parameters": {
            "col": "{thing.properties}",
            "with": "''",
            "on": "`{start}\"|\"{end}`",
            "global": true
        }
    },
    {
        "transform": "settype",
        "parameters": {
            "col": "{thing.name}",
            "type": "String"
        }
    },
    {
        "transform": "settype",
        "parameters": {
            "col": "{location.description}",
            "type": "Integer"
        }
    },
    {
        "transform": "settype",
        "parameters": {
            "col": "{location.description}",
            "type": "String"
        }
    },
    {
        "transform": "settype",
        "parameters": {
            "col": "{omProcess.license.licenseAttributionSource}",
            "type": "String"
        }
    },
    {
        "transform": "replacepatterns",
        "parameters": {
            "col": "{omProcess.resultQuality.qualityDescription}",
            "with": "''",
            "on": "`{start}\"|\"{end}`",
            "global": true
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{dataStream.name}",
                "'datastreamName'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{dataStream.description}",
                "'datastreamDescription'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{dataStream.observationType}",
                "'observationType'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{dataStream.unitOfCategory}",
                "'unitOfCategory'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{observation.resultCategoryObservation.phenomenonTime}",
                "'phenomenonTime'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{observation.resultCategoryObservation.resultTime}",
                "'resultTime'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{observation.resultCategoryObservation.result}",
                "'result'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{observation.resultCategoryObservation.submitTime}",
                "'submitTime'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{observation.image.imageStatus}",
                "'imageStatus'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{observation.context.parameters}",
                "'context'"
            ]
        }
    },
    {
        "transform": "nest",
        "parameters": {
            "col": [
                "context",
                "{Larva Presence}",
                "{raw context 1}",
                "{raw context 2}"
            ],
            "into": "map",
            "as": "'parameters'"
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{omProcess.license.licenseName}",
                "'licenseName'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{omProcess.license.licenseURI}",
                "'licenseURI'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{omProcess.license.licenseAttributionSource}",
                "'attributionDataSource'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{omProcess.license.licenseAttributionAggregator}",
                "'attributionDataAggregator'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{omProcess.resultQuality.validationStatus}",
                "'validationStatus'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{omProcess.resultQuality.validationMethod}",
                "'validationMethod'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{omProcess.resultQuality.validationResult}",
                "'validationResult'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{omProcess.resultQuality.qualityDescription}",
                "'qualityDescription'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{omProcess.resultQuality.qualityGrade}",
                "'qualityGrade'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{observedProperty.name}",
                "'observedPropertyName'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{observedProperty.description}",
                "'observedPropertyDescription'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{observedProperty.definition}",
                "'observedPropertyDefinition'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{sensor.name}",
                "'sensorName'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{sensor.description}",
                "'sensorDescription'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{sensor.encodingType}",
                "'sensorEncodingType'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{sensor.metadata}",
                "'sensorMetadata'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{location.name}",
                "'locationName'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{location.description}",
                "'locationDescription'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{location.encodingType}",
                "'locationEncodingType'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{location.locationDetails.stationaryProperties.latitude}",
                "'latitude'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{location.locationDetails.stationaryProperties.longitude}",
                "'longitude'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{thing.name}",
                "'volunteerName'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{thing.description}",
                "'volunteerDescription'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{thing.properties}",
                "'volunteerProperties'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{featureOfInterest.name}",
                "'featureName'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{featureOfInterest.description}",
                "'featureDescription'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{featureOfInterest.encodingType}",
                "'featureEncodingType'"
            ]
        }
    },
    {
        "transform": "rename",
        "parameters": {
            "type": "manual",
            "mapping": [
                "{featureOfInterest.feature}",
                "'featureLocation'"
            ]
        }
    },
    {
        "transform": "drop",
        "parameters": {
            "col": [
                "column2",
                "mhm_protocol",
                "mhm_updateDate",
                "mhm_publishDate",
                "mhm_organizationId",
                "mhm_countryName",
                "mhm_countryCode",
                "mhm_elevation",
                "mhm_pid",
                "mhm_ExtraData",
                "mhm_BreedingGroundEliminated",
                "mhm_AbdomenCloseupPhotoUrls",
                "mhm_MeasurementElevation",
                "mhm_LarvaeCount",
                "mhm_MosquitoEggs",
                "mhm_Genus",
                "mhm_MosquitoEggCount",
                "mhm_WaterSource",
                "mhm_MosquitoAdults",
                "mhm_Species",
                "mhm_Comments",
                "mhm_MosquitoPupae",
                "mhm_DataSource",
                "mhm_LarvaFullBodyPhotoUrls",
                "mhm_Latitude",
                "mhm_LastIdentifyStage",
                "mhm_WaterSourceType",
                "mhm_Longitude",
                "mhm_MosquitoHabitatMapperId",
                "mhm_LarvaeCountMagnitude",
                "mhm_LarvaeCountIsRangeFlag",
                "mhm_HasGenus",
                "mhm_IsGenusOfInterest",
                "mhm_IsWaterSourceContainer",
                "mhm_HasWaterSource",
                "mhm_PhotoCount",
                "mhm_RejectedCount",
                "mhm_PendingCount",
                "mhm_PhotoBitBinary",
                "mhm_PhotoBitDecimal",
                "mhm_SubCompletenessScore",
                "mhm_CumulativeCompletenessScore"
            ],
            "action": "Drop"
        }
    },
    {
        "transform": "derive",
        "parameters": {
            "type": "single",
            "value": "'Point'",
            "as": "'type'"
        }
    },
    {
        "transform": "nest",
        "parameters": {
            "col": [
                "longitude",
                "latitude"
            ],
            "into": "array",
            "as": "'coordinates'"
        }
    },
    {
        "transform": "nest",
        "parameters": {
            "col": [
                "type",
                "coordinates"
            ],
            "into": "map",
            "as": "'geometry'"
        }
    },
    {
        "transform": "move",
        "parameters": {
            "col": [
                "type",
                "coordinates",
                "geometry"
            ],
            "position": "after",
            "after": "featureLocation"
        }
    },
    {
        "transform": "Keep",
        "parameters": {}
    },
    {
        "transform": "drop",
        "parameters": {
            "col": "{Larva Presence}",
            "action": "Drop"
        }
    },
    {
        "transform": "drop",
        "parameters": {
            "col": "context",
            "action": "Drop"
        }
    },
    {
        "transform": "move",
        "parameters": {
            "col": "parameters",
            "position": "after",
            "after": "imageStatus"
        }
    },
    {
        "transform": "settype",
        "parameters": {
            "col": "resultTime",
            "datetimeType": [
                "'Datetime'",
                "'yy-mm-dd hh:mm:ss'",
                "'yyyy*mm*dd*HH:MM:SS'"
            ],
            "type": "Datetime"
        }
    },
    {
        "transform": "settype",
        "parameters": {
            "col": "resultTime",
            "datetimeType": [
                "'Datetime'",
                "'yy-mm-dd'",
                "'yyyy*mm*dd'"
            ],
            "type": "Datetime"
        }
    },
    {
        "transform": "drop",
        "parameters": {
            "col": "{raw context 1}",
            "action": "Drop"
        }
    },
    {
        "transform": "drop",
        "parameters": {
            "col": "{raw context 2}",
            "action": "Drop"
        }
    }
]