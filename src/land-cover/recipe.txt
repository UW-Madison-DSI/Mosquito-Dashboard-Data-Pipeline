drop col: column2 action: Drop
header
derive type: single value: 'Land Cover Photos' as: 'observedProperty.name'
derive type: single value: 'Land Cover as documented by photographs' as: 'observedProperty.description'
derive type: single value: 'Land Cover as documented by photographs' as: 'observedProperty.definition'
derive type: single value: 'Globe Land Cover v1.0.0 OGC' as: 'title'
derive type: single value: 'Land Cover Data Generated by Globe' as: 'description'
nest col: title,lc_LandCoverId,lc_siteId,lc_Userid into: map as: 'dataStream.description'
move col: {dataStream.description} position: after after: description
move col: title position: before before: description
derive type: single value: MERGE([title,lc_LandCoverId,lc_siteId,lc_Userid], ':') as: 'dataStream.name'
move col: {dataStream.name} position: after after: description
derive type: single value: 'Category' as: 'dataStream.observationType'
derive type: single value: '\"name\":\"classification\", \"symbol\":\"none\",\"definition\":\"n\/a\",\"sensor use\":\"yes\"' as: 'dataStream.unitOfCategory'
derive type: single value: MERGE([lc_organizationId,lc_siteId], ':') as: 'observation.projectObservationUID'
rename type: manual mapping: [lc_measuredDate,'observation.resultCategoryObservation.phenomenonTime']
rename type: manual mapping: [lc_MeasuredAt,'observation.resultCategoryObservation.resultTime']
nest col: lc_PrimaryClassification, lc_SecondaryClassification, lc_EastClassifications, lc_WestClassifications, lc_NorthClassifications, lc_SouthClassifications into: map as: 'observation.resultCategoryObservation.result'
rename type: manual mapping: [lc_createDate,'observation.resultCategoryObservation.submitTime']
move col: {dataStream.observationType}, {dataStream.unitOfCategory}, {observation.projectObservationUID}, {observation.resultCategoryObservation.phenomenonTime}, {observation.resultCategoryObservation.resultTime}, {observation.resultCategoryObservation.result}, {observation.resultCategoryObservation.submitTime} position: after after: {dataStream.description}
nest col: lc_UpwardPhotoUrl, lc_DownwardPhotoUrl, lc_EastPhotoUrl, lc_WestPhotoUrl, lc_NorthPhotoUrl, lc_SouthPhotoUrl into: map as: 'observation.image.imageResult'
derive type: single value: IF(ISNULL(lc_DownwardPhotoUrl) == 'true', IF(ISNULL(lc_UpwardPhotoUrl) == 'true', IF(ISNULL(lc_NorthPhotoUrl) == 'true', IF(ISNULL(lc_SouthPhotoUrl) == 'true', IF(ISNULL(lc_EastPhotoUrl) == 'true', IF(ISNULL(lc_WestPhotoUrl) == 'true', 'no', 'yes'), 'yes'), 'yes'), 'yes'), 'yes'), 'yes') as: 'observation.image.imageStatus'
nest col: lc_DownwardCaption, lc_DownwardExtraData, lc_EastCaption, lc_EastExtraData, lc_NorthCaption, lc_NorthExtraData, lc_SouthCaption, lc_SouthExtraData, lc_UpwardCaption, lc_UpwardExtraData, lc_WestCaption, lc_WestExtraData, lc_MGRSLatitude, lc_MGRSLongitude, lc_elevation, lc_CumulativeCompletenessScore, lc_SubCompletenessScore into: map as: 'observation.context.parameters'
derive type: single value: 'NA' as: 'omProcess.license.licenseName'
derive type: single value: 'https:\/\/www.globe.gov\/documents\/10157\/2592674\/GLOBE+Data+User+Guide_v1_final.pdf\/863a971d-95c5-4dd9-b75c-46713f019088' as: 'omProcess.license.licenseURI'
derive type: single value: 'Global Learning and Observations to Benefit the Environment (GLOBE)' as: 'omProcess.license.licenseAttributionAggregator'
derive type: single value: 'Yes' as: 'omProcess.resultQuality.validationStatus'
derive type: single value: 'Validation method is as follows: 1) GLOBE Observer App has its own validators to ensure the requested data type matches the received value. 2) GLOBE Observer Team validates the photos to ensure they are useful and match the area where the photographer took the photo. 3) Our pre-processing algorithms ensure values entered are appropriate and reasonable. Our code also creates quality assurance flags to allow Users to better summarize the data.' as: 'omProcess.resultQuality.validationMethod'
derive type: single value: 'FALSE - Entries with their photos undergoing GLOBE validation process will have a \'pending\' code for their photos. NOTE: Some photos will be listed as \'rejected\'. Photos that pass our validation process will include GLOBE\'s URL to that photo' as: 'omProcess.resultQuality.validationResult'
derive type: single value: 'GLOBE Observer Data Guide: https:\/\/www.globe.gov\/documents\/10157\/2592674\/GLOBE+Data+User+Guide_v1_final.pdf\/863a971d-95c5-4dd9-b75c-46713f019088 (Page 25) | Our Code Documentation: https:\/\/iges-geospatial.github.io\/globe-observer-utils-docs\/go_utils\/mhm.html' as: 'omProcess.resultQuality.qualityDescription'
derive type: single value: 'research' as: 'omProcess.resultQuality.qualityGrade'
set col: {observedProperty.description} value: 'The primary and secondary Land Cover Classifications for an area'
derive type: single value: 'NA' as: 'sensor.name'
derive type: single value: 'NA' as: 'sensor.description'
rename type: manual mapping: [lc_siteName,'location.name']
derive type: single value: MERGE(['Site ID',lc_siteId], ':') as: 'location.description'
derive type: single value: 'GeoJSON' as: 'location.encodingType'
rename type: manual mapping: [lc_Latitude,'location.locationDetails.mobileProperties.result24Set01.latitude01']
rename type: manual mapping: [lc_Longitude,'location.locationDetails.mobileProperties.result24Set01.longitude01']
rename type: manual mapping: [lc_elevation,'location.locationDetails.mobileProperties.result24Set01.elevation01']
derive type: single value: MERGE([lc_Userid,lc_GlobeTeams], ':') as: 'thing.name'
nest col: lc_organizationName,lc_PhotoCount,lc_RejectedCount,lc_PendingCount,lc_EmptyCount into: map as: 'thing.description'
derive type: single value: {location.name} as: 'featureOfInterest.name'
rename type: manual mapping: [lc_siteId,'featureOfInterest.description']
derive type: single value: 'GeoJSON' as: 'featureOfInterest.encodingType'
nest col: lc_MGRSLongitude,lc_MGRSLatitude into: array as: 'featureOfInterest.location'
move col: {observation.image.imageStatus}, {observation.image.imageResult}, {observation.context.parameters}, {omProcess.license.licenseName}, {omProcess.license.licenseURI}, {omProcess.license.licenseAttributionAggregator}, {omProcess.resultQuality.validationStatus}, {omProcess.resultQuality.validationMethod}, {omProcess.resultQuality.validationResult}, {omProcess.resultQuality.qualityDescription}, {omProcess.resultQuality.qualityGrade}, {sensor.name}, {sensor.description}, {location.name}, {location.description}, {location.encodingType}, {location.locationDetails.mobileProperties.result24Set01.latitude01}, {location.locationDetails.mobileProperties.result24Set01.longitude01}, {location.locationDetails.mobileProperties.result24Set01.elevation01}, {thing.name}, {thing.description}, {featureOfInterest.name}, {featureOfInterest.description}, {featureOfInterest.encodingType}, {featureOfInterest.location} position: after after: {observation.resultCategoryObservation.submitTime}
move col: {observedProperty.name},{observedProperty.description},{observedProperty.definition} position: after after: {omProcess.resultQuality.qualityGrade}
drop col: lc_updateDate, lc_publishDate, lc_organizationId, lc_organizationName, lc_countryName, lc_countryCode, lc_MGRSLatitude, lc_MGRSLongitude, lc_pid, lc_DownwardCaption, lc_DownwardExtraData, lc_DownwardPhotoUrl, lc_EastCaption, lc_EastClassifications, lc_EastExtraData, lc_EastPhotoUrl, lc_East_BarrenBareRock, lc_East_BarrenDirtOther, lc_East_BarrenDrySaltFlats, lc_East_BarrenGlaciers, lc_East_BarrenPerennialSnowfields, lc_East_BarrenSandy, lc_East_CultivatedAthleticFieldGolfCourseCemetery, lc_East_CultivatedCropsOrPastures, lc_East_CultivatedOrchards, lc_East_CultivatedOtherAgriculture, lc_East_HerbaceousGrasslandFernsOrFlowers, lc_East_HerbaceousGrasslandMediumGrass, lc_East_HerbaceousGrasslandShortGrass, lc_East_HerbaceousGrasslandTallGrass, lc_East_OpenWaterFreshwater, lc_East_OpenWaterMarine, lc_East_ShrubsCloselySpacedNotSureWhich, lc_East_ShrubsCloselySpacedShortDeciduous, lc_East_ShrubsCloselySpacedShortEvergreen, lc_East_ShrubsCloselySpacedShortExtremelyDry, lc_East_ShrubsCloselySpacedTallDeciduous, lc_East_ShrubsCloselySpacedTallEvergreen, lc_East_ShrubsCloselySpacedTallExtremelyDry, lc_East_ShrubsLooselySpacedNotSureWhich, lc_East_ShrubsLooselySpacedShortDeciduous, lc_East_ShrubsLooselySpacedShortEvergreen, lc_East_ShrubsLooselySpacedShortExtremelyDry, lc_East_ShrubsLooselySpacedTallDeciduous, lc_East_ShrubsLooselySpacedTallEvergreen, lc_East_ShrubsLooselySpacedTallExtremelyDry, lc_East_TreesCloselySpacedDeciduousBroadLeaved, lc_East_TreesCloselySpacedDeciduousNeedleLeaved, lc_East_TreesCloselySpacedEvergreenBroadLeaved, lc_East_TreesCloselySpacedEvergreenNeedleLeaved, lc_East_TreesCloselySpacedExtremelyDry, lc_East_TreesCloselySpacedNotSureWhich, lc_East_TreesLooselySpacedDeciduousBroadLeaved, lc_East_TreesLooselySpacedDeciduousNeedleLeaved, lc_East_TreesLooselySpacedEvergreenBroadLeaved, lc_East_TreesLooselySpacedEvergreenNeedleLeaved, lc_East_TreesLooselySpacedExtremelyDry, lc_East_TreesLooselySpacedNotSureWhich, lc_East_UrbanCommercialProperty, lc_East_UrbanOther, lc_East_UrbanResidentialProperty, lc_East_UrbanRoadsAndParking, {lc_East_WetlandsInFreshwaterLakeOrPond(Lacustrine)}, {lc_East_WetlandsInFreshwaterRiverine(Riverine)}, {lc_East_WetlandsInSaltBrackishTidal(Estuarine)}, lc_NorthCaption, lc_NorthClassifications, lc_NorthExtraData, lc_NorthPhotoUrl, lc_North_BarrenBareRock, lc_North_BarrenDirtOther, lc_North_BarrenDrySaltFlats, lc_North_BarrenGlaciers, lc_North_BarrenPerennialSnowfields, lc_North_BarrenSandy, lc_North_CultivatedAthleticFieldGolfCourseCemetery, lc_North_CultivatedCropsOrPastures, lc_North_CultivatedOrchards, lc_North_CultivatedOtherAgriculture, lc_North_HerbaceousGrasslandFernsOrFlowers, lc_North_HerbaceousGrasslandMediumGrass, lc_North_HerbaceousGrasslandShortGrass, lc_North_HerbaceousGrasslandTallGrass, lc_North_OpenWaterFreshwater, lc_North_OpenWaterMarine, lc_North_ShrubsCloselySpacedNotSureWhich, lc_North_ShrubsCloselySpacedShortDeciduous, lc_North_ShrubsCloselySpacedShortEvergreen, lc_North_ShrubsCloselySpacedShortExtremelyDry, lc_North_ShrubsCloselySpacedTallDeciduous, lc_North_ShrubsCloselySpacedTallEvergreen, lc_North_ShrubsCloselySpacedTallExtremelyDry, lc_North_ShrubsLooselySpacedNotSureWhich, lc_North_ShrubsLooselySpacedShortDeciduous, lc_North_ShrubsLooselySpacedShortEvergreen, lc_North_ShrubsLooselySpacedShortExtremelyDry, lc_North_ShrubsLooselySpacedTallDeciduous, lc_North_ShrubsLooselySpacedTallEvergreen, lc_North_ShrubsLooselySpacedTallExtremelyDry, lc_North_TreesCloselySpacedDeciduousBroadLeaved, lc_North_TreesCloselySpacedDeciduousNeedleLeaved, lc_North_TreesCloselySpacedEvergreenBroadLeaved, lc_North_TreesCloselySpacedEvergreenNeedleLeaved, lc_North_TreesCloselySpacedExtremelyDry, lc_North_TreesCloselySpacedNotSureWhich, lc_North_TreesLooselySpacedDeciduousBroadLeaved, lc_North_TreesLooselySpacedDeciduousNeedleLeaved, lc_North_TreesLooselySpacedEvergreenBroadLeaved, lc_North_TreesLooselySpacedEvergreenNeedleLeaved, lc_North_TreesLooselySpacedExtremelyDry, lc_North_TreesLooselySpacedNotSureWhich, lc_North_UrbanCommercialProperty, lc_North_UrbanOther, lc_North_UrbanResidentialProperty, lc_North_UrbanRoadsAndParking, {lc_North_WetlandsInFreshwaterLakeOrPond(Lacustrine)}, {lc_North_WetlandsInFreshwaterRiverine(Riverine)}, {lc_North_WetlandsInSaltBrackishTidal(Estuarine)}, lc_Overall_BarrenBareRock, lc_Overall_BarrenDirtOther, lc_Overall_BarrenDrySaltFlats, lc_Overall_BarrenGlaciers, lc_Overall_BarrenPerennialSnowfields, lc_Overall_BarrenSandy, lc_Overall_CultivatedAthleticFieldGolfCourseCemetery, lc_Overall_CultivatedCropsOrPastures, lc_Overall_CultivatedOrchards, lc_Overall_CultivatedOtherAgriculture, lc_Overall_HerbaceousGrasslandFernsOrFlowers, lc_Overall_HerbaceousGrasslandMediumGrass, lc_Overall_HerbaceousGrasslandShortGrass, lc_Overall_HerbaceousGrasslandTallGrass, lc_Overall_OpenWaterFreshwater, lc_Overall_OpenWaterMarine, lc_Overall_ShrubsCloselySpacedNotSureWhich, lc_Overall_ShrubsCloselySpacedShortDeciduous, lc_Overall_ShrubsCloselySpacedShortEvergreen, lc_Overall_ShrubsCloselySpacedShortExtremelyDry, lc_Overall_ShrubsCloselySpacedTallDeciduous, lc_Overall_ShrubsCloselySpacedTallEvergreen, lc_Overall_ShrubsCloselySpacedTallExtremelyDry, lc_Overall_ShrubsLooselySpacedNotSureWhich, lc_Overall_ShrubsLooselySpacedShortDeciduous, lc_Overall_ShrubsLooselySpacedShortEvergreen, lc_Overall_ShrubsLooselySpacedShortExtremelyDry, lc_Overall_ShrubsLooselySpacedTallDeciduous, lc_Overall_ShrubsLooselySpacedTallEvergreen, lc_Overall_ShrubsLooselySpacedTallExtremelyDry, lc_Overall_TreesCloselySpacedDeciduousBroadLeaved, lc_Overall_TreesCloselySpacedDeciduousNeedleLeaved, lc_Overall_TreesCloselySpacedEvergreenBroadLeaved, lc_Overall_TreesCloselySpacedEvergreenNeedleLeaved, lc_Overall_TreesCloselySpacedExtremelyDry, lc_Overall_TreesCloselySpacedNotSureWhich, lc_Overall_TreesLooselySpacedDeciduousBroadLeaved, lc_Overall_TreesLooselySpacedDeciduousNeedleLeaved, lc_Overall_TreesLooselySpacedEvergreenBroadLeaved, lc_Overall_TreesLooselySpacedEvergreenNeedleLeaved, lc_Overall_TreesLooselySpacedExtremelyDry, lc_Overall_TreesLooselySpacedNotSureWhich, lc_Overall_UrbanCommercialProperty, lc_Overall_UrbanOther, lc_Overall_UrbanResidentialProperty, lc_Overall_UrbanRoadsAndParking, {lc_Overall_WetlandsInFreshwaterLakeOrPond(Lacustrine)}, {lc_Overall_WetlandsInFreshwaterRiverine(Riverine)}, {lc_Overall_WetlandsInSaltBrackishTidal(Estuarine)}, lc_SouthCaption, lc_SouthClassifications, lc_SouthExtraData, lc_SouthPhotoUrl, lc_South_BarrenBareRock, lc_South_BarrenDirtOther, lc_South_BarrenDrySaltFlats, lc_South_BarrenGlaciers, lc_South_BarrenPerennialSnowfields, lc_South_BarrenSandy, lc_South_CultivatedAthleticFieldGolfCourseCemetery, lc_South_CultivatedCropsOrPastures, lc_South_CultivatedOrchards, lc_South_CultivatedOtherAgriculture, lc_South_HerbaceousGrasslandFernsOrFlowers, lc_South_HerbaceousGrasslandMediumGrass, lc_South_HerbaceousGrasslandShortGrass, lc_South_HerbaceousGrasslandTallGrass, lc_South_OpenWaterFreshwater, lc_South_OpenWaterMarine, lc_South_ShrubsCloselySpacedNotSureWhich, lc_South_ShrubsCloselySpacedShortDeciduous, lc_South_ShrubsCloselySpacedShortEvergreen, lc_South_ShrubsCloselySpacedShortExtremelyDry, lc_South_ShrubsCloselySpacedTallDeciduous, lc_South_ShrubsCloselySpacedTallEvergreen, lc_South_ShrubsCloselySpacedTallExtremelyDry, lc_South_ShrubsLooselySpacedNotSureWhich, lc_South_ShrubsLooselySpacedShortDeciduous, lc_South_ShrubsLooselySpacedShortEvergreen, lc_South_ShrubsLooselySpacedShortExtremelyDry, lc_South_ShrubsLooselySpacedTallDeciduous, lc_South_ShrubsLooselySpacedTallEvergreen, lc_South_ShrubsLooselySpacedTallExtremelyDry, lc_South_TreesCloselySpacedDeciduousBroadLeaved, lc_South_TreesCloselySpacedDeciduousNeedleLeaved, lc_South_TreesCloselySpacedEvergreenBroadLeaved, lc_South_TreesCloselySpacedEvergreenNeedleLeaved, lc_South_TreesCloselySpacedExtremelyDry, lc_South_TreesCloselySpacedNotSureWhich, lc_South_TreesLooselySpacedDeciduousBroadLeaved, lc_South_TreesLooselySpacedDeciduousNeedleLeaved, lc_South_TreesLooselySpacedEvergreenBroadLeaved, lc_South_TreesLooselySpacedEvergreenNeedleLeaved, lc_South_TreesLooselySpacedExtremelyDry, lc_South_TreesLooselySpacedNotSureWhich, lc_South_UrbanCommercialProperty, lc_South_UrbanOther, lc_South_UrbanResidentialProperty, lc_South_UrbanRoadsAndParking, {lc_South_WetlandsInFreshwaterLakeOrPond(Lacustrine)}, {lc_South_WetlandsInFreshwaterRiverine(Riverine)}, {lc_South_WetlandsInSaltBrackishTidal(Estuarine)}, lc_UpwardCaption, lc_UpwardExtraData, lc_UpwardPhotoUrl, lc_WestCaption, lc_WestClassifications, lc_WestExtraData, lc_WestPhotoUrl, lc_West_BarrenBareRock, lc_West_BarrenDirtOther, lc_West_BarrenDrySaltFlats, lc_West_BarrenGlaciers, lc_West_BarrenPerennialSnowfields, lc_West_BarrenSandy, lc_West_CultivatedAthleticFieldGolfCourseCemetery, lc_West_CultivatedCropsOrPastures, lc_West_CultivatedOrchards, lc_West_CultivatedOtherAgriculture, lc_West_HerbaceousGrasslandFernsOrFlowers, lc_West_HerbaceousGrasslandMediumGrass, lc_West_HerbaceousGrasslandShortGrass, lc_West_HerbaceousGrasslandTallGrass, lc_West_OpenWaterFreshwater, lc_West_OpenWaterMarine, lc_West_ShrubsCloselySpacedNotSureWhich, lc_West_ShrubsCloselySpacedShortDeciduous, lc_West_ShrubsCloselySpacedShortEvergreen, lc_West_ShrubsCloselySpacedShortExtremelyDry, lc_West_ShrubsCloselySpacedTallDeciduous, lc_West_ShrubsCloselySpacedTallEvergreen, lc_West_ShrubsCloselySpacedTallExtremelyDry, lc_West_ShrubsLooselySpacedNotSureWhich, lc_West_ShrubsLooselySpacedShortDeciduous, lc_West_ShrubsLooselySpacedShortEvergreen, lc_West_ShrubsLooselySpacedShortExtremelyDry, lc_West_ShrubsLooselySpacedTallDeciduous, lc_West_ShrubsLooselySpacedTallEvergreen, lc_West_ShrubsLooselySpacedTallExtremelyDry, lc_West_TreesCloselySpacedDeciduousBroadLeaved, lc_West_TreesCloselySpacedDeciduousNeedleLeaved, lc_West_TreesCloselySpacedEvergreenBroadLeaved, lc_West_TreesCloselySpacedEvergreenNeedleLeaved, lc_West_TreesCloselySpacedExtremelyDry, lc_West_TreesCloselySpacedNotSureWhich, lc_West_TreesLooselySpacedDeciduousBroadLeaved, lc_West_TreesLooselySpacedDeciduousNeedleLeaved, lc_West_TreesLooselySpacedEvergreenBroadLeaved, lc_West_TreesLooselySpacedEvergreenNeedleLeaved, lc_West_TreesLooselySpacedExtremelyDry, lc_West_TreesLooselySpacedNotSureWhich, lc_West_UrbanCommercialProperty, lc_West_UrbanOther, lc_West_UrbanResidentialProperty, lc_West_UrbanRoadsAndParking, {lc_West_WetlandsInFreshwaterLakeOrPond(Lacustrine)}, {lc_West_WetlandsInFreshwaterRiverine(Riverine)}, {lc_West_WetlandsInSaltBrackishTidal(Estuarine)}, lc_MucCode, lc_DataSource, lc_DryGround, lc_MucDetails, lc_Muddy, lc_StandingWater, lc_LeavesOnTrees, lc_Userid, lc_RainingSnowing, lc_LandCoverId, lc_MucDescription, lc_SnowIce, lc_FieldNotes, lc_MeasurementElevation, lc_GlobeTeams, lc_PhotoCount, lc_RejectedCount, lc_PendingCount, lc_EmptyCount, lc_PhotoBitBinary, lc_PhotoBitDecimal, lc_ClassificationCount, lc_ClassificationBitBinary, lc_ClassificationBitDecimal, lc_NorthPrimary, lc_NorthSecondary, lc_EastPrimary, lc_EastSecondary, lc_SouthPrimary, lc_SouthSecondary, lc_WestPrimary, lc_WestSecondary, lc_PrimaryClassification, lc_SecondaryClassification, lc_PrimaryPercentage, lc_SecondaryPercentage, lc_SubCompletenessScore, lc_CumulativeCompletenessScore action: Drop
rename type: manual mapping: [{dataStream.name},'datastreamName']
rename type: manual mapping: [{dataStream.description},'datastreamDescription']
rename type: manual mapping: [{dataStream.observationType},'observationType']
rename type: manual mapping: [{dataStream.unitOfCategory},'unitOfCategory']
rename type: manual mapping: [{observation.resultCategoryObservation.phenomenonTime},'phenomenonTime']
rename type: manual mapping: [{observation.resultCategoryObservation.resultTime},'resultTime']
rename type: manual mapping: [{observation.resultCategoryObservation.result},'result']
rename type: manual mapping: [{observation.resultCategoryObservation.submitTime},'submitTime']
rename type: manual mapping: [{observation.image.imageStatus},'imageStatus']
rename type: manual mapping: [{observation.image.imageResult},'imageResult']
rename type: manual mapping: [{observation.context.parameters},'parameters']
rename type: manual mapping: [{omProcess.license.licenseName},'licenseName']
rename type: manual mapping: [{omProcess.license.licenseURI},'licenseURI']
rename type: manual mapping: [{omProcess.license.licenseAttributionAggregator},'attributionDataAggregator']
rename type: manual mapping: [{omProcess.resultQuality.validationStatus},'validationStatus']
rename type: manual mapping: [{omProcess.resultQuality.validationMethod},'validationMethod']
rename type: manual mapping: [{omProcess.resultQuality.validationResult},'validationResult']
rename type: manual mapping: [{omProcess.resultQuality.qualityDescription},'qualityDescription']
rename type: manual mapping: [{omProcess.resultQuality.qualityGrade},'qualityGrade']
rename type: manual mapping: [{observedProperty.name},'observedPropertyName']
rename type: manual mapping: [{observedProperty.description},'observedPropertyDescription']
rename type: manual mapping: [{observedProperty.definition},'observedPropertyDefinition']
rename type: manual mapping: [{sensor.name},'sensorName']
rename type: manual mapping: [{sensor.description},'sensorDescription']
rename type: manual mapping: [{location.name},'locationName']
rename type: manual mapping: [{location.description},'locationDescription']
rename type: manual mapping: [{location.encodingType},'locationEncodingType']
rename type: manual mapping: [{location.locationDetails.mobileProperties.result24Set01.latitude01},'latitude']
rename type: manual mapping: [{location.locationDetails.mobileProperties.result24Set01.longitude01},'longitude']
rename type: manual mapping: [{location.locationDetails.mobileProperties.result24Set01.elevation01},'elevation']
rename type: manual mapping: [{thing.description},'thingDescription']
rename type: manual mapping: [{featureOfInterest.name},'featureName']
rename type: manual mapping: [{featureOfInterest.description},'featureDescription']
rename type: manual mapping: [{featureOfInterest.encodingType},'featureEncodingType']
rename type: manual mapping: [{featureOfInterest.location},'featureLocation']
replacepatterns col: featureLocation with: '' on: '\"' global: true
settype col: featureDescription type: String
unnest col: imageResult keys: 'lc_UpwardPhotoUrl', 'lc_DownwardPhotoUrl', 'lc_EastPhotoUrl', 'lc_WestPhotoUrl', 'lc_NorthPhotoUrl', 'lc_SouthPhotoUrl' pluck: false markLineage: false
splitpatterns col: phenomenonTime type: on on: '.'
drop col: phenomenonTime2 action: Drop
rename type: manual mapping: [phenomenonTime1,'phenomenonTime']
settype col: phenomenonTime type: String
splitpatterns col: resultTime type: on on: '.'
drop col: resultTime2 action: Drop
rename type: manual mapping: [resultTime1,'resultTime']
splitpatterns col: submitTime type: on on: '.'
drop col: submitTime2 action: Drop
rename type: manual mapping: [submitTime1,'submitTime']
replacepatterns col: phenomenonTime with: ' 00:00:00' on: `{end}`
rename type: manual mapping: [{observation.projectObservationUID},'projectObservationUID']
rename type: manual mapping: [{thing.name},'thingName']
filter type: custom rowType: single row: MATCHES([YEAR(submitTime)], YEAR(NOW('UTC')), true) action: Keep
derive type: single value: '{\"type\": \"Point\",\"coordinates\": ' as: 'geometry1'
derive type: single value: '}' as: 'geometry3'
derive type: single value: MERGE([geometry1,featureLocation,geometry3]) as: 'geometry'
drop col: geometry3 action: Drop
drop col: geometry1 action: Drop