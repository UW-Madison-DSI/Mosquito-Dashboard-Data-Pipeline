[
{
    "transform": "settype",
    "parameters":
    {
        "col": "movelab_annotation",
        "type": "Map"
    }
},
{
    "transform": "unnest",
    "parameters":
    {
        "col": "movelab_annotation",
        "keys": ["edited_user_notes", "photo_html", "tiger_certainty_category", "aegypti_certainty_category", "score", "classification", "site_certainty_category"],
        "pluck": "markLineage"
    }
},
{
    "transform": "splitpatterns",
    "parameters":
    {
        "col": "photo_html",
        "type": "on",
        "on": "\" target"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "photo_html2",
        "action": "Drop"
    }
},
{
    "transform": "splitpatterns",
    "parameters":
    {
        "col": "photo_html1",
        "type": "on",
        "on": "href=\""
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "photo_html2",
        "action": "Drop"
    }
},
{
    "transform": "replacepatterns",
    "parameters":
    {
        "col": "photo_html3",
        "with": "http://webserver.mosquitoalert.com/media",
        "on": "/media"
    }
},
{
    "transform": "settype",
    "parameters":
    {
        "col": "movelab_annotation_euro",
        "type": "Map"
    }
},
{
    "transform": "unnest",
    "parameters":
    {
        "col": "movelab_annotation_euro",
        "keys": ["class_name", "class_label", "class_id", "class_value"],
        "pluck": "markLineage"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["version_UUID", "observation.projectObservationUID"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["creation_time", "observation.resultCategoryObservation.phenomenonTime"]
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "creation_date",
        "action": "Drop"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "creation_day_since_launch",
        "action": "Drop"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "creation_year",
        "action": "Drop"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "creation_month",
        "action": "Drop"
    }
},
{
    "transform": "Delete",
    "parameters":
    {
        "target": "site_cat"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "{observation.resultCategoryObservation.phenomenonTime}",
        "as": "observation.resultCategoryObservation.phenomenonTime.copy"
    }
},
{
    "transform": "move",
    "parameters":
    {
        "col": "{observation.resultCategoryObservation.phenomenonTime.copy}",
        "position": "after",
        "after": "{observation.resultCategoryObservation.phenomenonTime}"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observation.resultCategoryObservation.phenomenonTime.copy}", "observation.resultCategoryObservation.resultTime"]
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "{observation.resultCategoryObservation.resultTime}",
        "as": "observation_resultCategoryObservation_resultTime_copy"
    }
},
{
    "transform": "move",
    "parameters":
    {
        "col": "observation_resultCategoryObservation_resultTime_copy",
        "position": "after",
        "after": "{observation.resultCategoryObservation.resultTime}"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["observation_resultCategoryObservation_resultTime_copy", "observation.resultCategoryObservation.submitTime"]
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value":
        {
            "type": "function",
            "params": ["[", "{\"Type\":\"", ",", "type", ",", "\",", ",", "\"Indentified by Human\":\"", ",", "class_name", ",", "\",", ",", "\"Identified by Machine\":\"\"}", "]", ","]
        },
        "as": "SOmething"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["SOmething", "observation_resultCategoryObservation_result"]
    }
},
{
    "transform": "move",
    "parameters":
    {
        "col": "observation_resultCategoryObservation_result",
        "position": "after",
        "after": "{observation.resultCategoryObservation.resultTime}"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "type",
        "action": "Drop"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["lat", "location.locationDetails.mobileProperties.latitude"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["lon", "location.locationDetails.mobileProperties.longitude"]
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value":
        {
            "type": "function",
            "params": ["ISMISSING", "(", "[", "photo_html3", "]"]
        }
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["photo_html3", "observation.image.imageResult"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["observation_resultCategoryObservation_result", "observation.resultCategoryObservation.result"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["observation_image_imageStatus", "observation.image.imageStatus"]
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value":
        {
            "type": "function",
            "params": ["[", "{\"Tiger Certainty\":\"", ",", "tiger_certainty_category", ",", "\",\"Aegypti Certainty\":\"", ",", "aegypti_certainty_category", ",", "\"}", "]", ","]
        },
        "as": "observation_context_parameters"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "CC0",
        "as": "omProcess.license.licenseName"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "http://creativecommons.org/publicdomain/zero/1.0/",
        "as": "omProcess.license.licenseURI"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["observation_context_parameters", "observation.context.parameters"]
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "This data set has been created through the efforts of the Mosquito Alert team and the thousands of citizen scientists who have volunteered their energy and contributed reports on the Mosquito Alert platform. We ask that you give attribution to the Mosquito Alert Community if you use this data in any publications.",
        "as": "omProcess.license.licenseAttributionSource"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "Agust\u00ed Escobar Rubies, & Mosquito Alert.  (2021).  Mosquito Alert Data. Zenodo. DOI: 10.5281/zenodo.597466",
        "as": "omProcess.license.licenseAttributionAggregator"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "Sensor",
        "as": "omProcess.processType"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "http://www.mosquitoalert.com/en/project/what-is-mosquito-alert/",
        "as": "omProcess.processReference"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "true",
        "as": "omProcess.resultQuality.validationStatus"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "Human expert validation",
        "as": "omProcess.resultQuality.validationMethod"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value":
        {
            "type": "function",
            "params": ["tiger_certainty_category", "=", "=", "1", ",", true, ",", "IF", "(", "tiger_certainty_category", "=", "=", "-", "3", ",", true, ",", "IF", "(", "aegypti_certainty_category", "=", "=", "1", ",", true, ",", "IF", "(", "aegypti_certainty_category", "=", "=", "3", ",", true, ","]
        }
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "{omProcess.resultQuality.validationResult}",
        "as": "omProcess.resultQuality.validationResult_copy"
    }
},
{
    "transform": "move",
    "parameters":
    {
        "col": "{omProcess.resultQuality.validationResult_copy}",
        "position": "after",
        "after": "{omProcess.resultQuality.validationResult}"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value":
        {
            "type": "function",
            "params": ["tiger_certainty_category", "=", "=", "1", ",", "Research", ",", "IF", "(", "tiger_certainty_category", "=", "=", "-", "3", ",", "Research", ",", "IF", "(", "aegypti_certainty_category", "=", "=", "1", ",", "Research", ",", "IF", "(", "aegypti_certainty_category", "=", "=", "3", ",", "Research", ",", "Casual"]
        }
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "as"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "Whether a species is observed at a location, a breeding site is documented, or bites are reported",
        "as": "observedProperty.description"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "http://www.mosquitoalert.com/en/project/envia-datos/",
        "as": "observedProperty.definition"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "{observation.projectObservationUID}",
        "as": "observation.projectObservationUID_copy"
    }
},
{
    "transform": "move",
    "parameters":
    {
        "col": "{observation.projectObservationUID_copy}",
        "position": "after",
        "after": "{observation.projectObservationUID}"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observation.projectObservationUID_copy}", "sensor.name"]
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value":
        {
            "type": "function",
            "params": ["[", "Anonymous cell phone user:", ",", "{sensor.name}", "]", ","]
        },
        "as": "sensor.description"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "Varies",
        "as": "sensor.encodingType"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "Anonymous location",
        "as": "location.name"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "location.name",
        "as": "location.description"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "GeoJSON Point",
        "as": "location.encodingType"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "sensor.name",
        "as": "thing.name"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "sensor.description",
        "as": "thing.description"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "location.name",
        "as": "featureOfInterest.name"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "location.description",
        "as": "featureOfInterest.description"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "GeoJSON Point",
        "as": "featureOfInterest.encodingType"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "latitude, longitude",
        "as": "featureOfInterest.location"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "Citizen science data on mosquitoes from Mosquito Alert with additional automated ID",
        "as": "title"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "Data is generated from the Mosquito Alert database",
        "as": "description"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value":
        {
            "type": "function",
            "params": ["[", "{sensor.name}", ",", "-mosquito species occurrence data from user cell phone", "]"]
        },
        "as": "dataStream.name"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "All species occurrence, site, or bite observations from a particular user taken with a sensor",
        "as": "dataStream.description"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "category observation",
        "as": "dataStream.observationType"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "{\"Type\":\"Lifecycle Phase\",\"Identified by Human\":\"Class and genus or species if verified from image\",\"Identified by Machine\":\"Genus and species if mosquito is flagged as a target invasive or vector by ML system\"}",
        "as": "dataStream.unitOfCategory"
    }
},
{
    "transform": "move",
    "parameters":
    {
        "col": "title",
        "position": "before",
        "before": "{dataStream.unitOfCategory}"
    }
},
{
    "transform": "move",
    "parameters":
    {
        "col": ["description", "{dataStream.name}", "{dataStream.description}", "{dataStream.observationType}", "{dataStream.unitOfCategory}", "{observation.projectObservationUID}", "{observation.resultCategoryObservation.phenomenonTime}", "{observation.resultCategoryObservation.resultTime}", "{observation.resultCategoryObservation.result}", "{observation.resultCategoryObservation.submitTime}", "{observation.image.imageStatus}", "{observation.image.imageResult}", "{observation.context.parameters}", "{omProcess.license.licenseName}", "{omProcess.license.licenseURI}", "{omProcess.license.licenseAttributionSource}", "{omProcess.license.licenseAttributionAggregator}", "{omProcess.processType}", "{omProcess.processReference}", "{omProcess.resultQuality.validationStatus}", "{omProcess.resultQuality.validationMethod}"],
        "position": "after",
        "after": "title"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "{omProcess.resultQuality.validationResult_copy}",
        "action": "Drop"
    }
},
{
    "transform": "move",
    "parameters":
    {
        "col": ["{omProcess.resultQuality.validationResult}", "{omProcess.resultQuality.qualityGrade}", "{observedProperty.name}", "{observedProperty.description}", "{observedProperty.definition}", "{sensor.name}", "{sensor.description}", "{sensor.encodingType}", "{location.name}", "{location.description}", "{location.encodingType}", "{location.locationDetails.mobileProperties.latitude}", "{location.locationDetails.mobileProperties.longitude}", "{thing.name}", "{thing.description}", "{featureOfInterest.name}", "{featureOfInterest.description}", "{featureOfInterest.encodingType}", "{featureOfInterest.location}"],
        "position": "after",
        "after": "{omProcess.resultQuality.validationMethod}"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": ["movelab_annotation", "edited_user_notes"],
        "action": "Drop"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": ["tiger_certainty_category", "aegypti_certainty_category", "score", "classification", "site_certainty_category", "movelab_annotation_euro", "class_name", "class_label", "class_id", "class_value", "tiger_responses", "tiger_responses_text", "site_responses", "site_responses_text", "tigaprob_cat", "visible", "latest_version", "n_photos", "final_expert_status_text", "responses", "cached_visible", "point", "country", "session"],
        "action": "Drop"
    }
},
{
    "transform": "settype",
    "parameters":
    {
        "col": "{observation.resultCategoryObservation.submitTime}",
        "datetimeType": ["Datetime", "mm-dd-yy hh:mm:ss", "mm*dd*yy*HH:MM:SSX"],
        "type": "Datetime"
    }
},
{
    "transform": "settype",
    "parameters":
    {
        "col": "{observation.resultCategoryObservation.submitTime}",
        "datetimeType": ["Datetime", "mm-dd-yy", "mm*dd*yyyy"],
        "type": "Datetime"
    }
},
{
    "transform": "settype",
    "parameters":
    {
        "col": "{observation.resultCategoryObservation.submitTime}",
        "type": "String"
    }
},
{
    "transform": "splitpatterns",
    "parameters":
    {
        "col": "{observation.resultCategoryObservation.submitTime}",
        "type": "on",
        "on": "."
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "{observation.resultCategoryObservation.submitTime2}",
        "action": "Drop"
    }
},
{
    "transform": "sort",
    "parameters":
    {
        "order": "{observation.resultCategoryObservation.submitTime1}"
    }
},
{
    "transform": "sort",
    "parameters":
    {
        "order": "-"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observation.resultCategoryObservation.submitTime1}", "observation.resultCategoryObservation.submitTime"]
    }
},
{
    "transform": "splitpatterns",
    "parameters":
    {
        "col": "{observation.resultCategoryObservation.phenomenonTime}",
        "type": "on",
        "on": "."
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "{observation.resultCategoryObservation.phenomenonTime2}",
        "action": "Drop"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observation.resultCategoryObservation.phenomenonTime1}", "observation.resultCategoryObservation.phenomenonTime"]
    }
},
{
    "transform": "Keep",
    "parameters":
    {}
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "Point",
        "as": "type"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value":
        {
            "type": "function",
            "params": ["[", "[", "{location.locationDetails.mobileProperties.longitude}", "]", ",", "[", "{location.locationDetails.mobileProperties.latitude}", "]", "]"]
        },
        "as": "coordinates"
    }
},
{
    "transform": "replacepatterns",
    "parameters":
    {
        "col": "coordinates",
        "with": "on"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "{\"type\":\"Point\",\"coordinates\":",
        "as": "geometry"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value":
        {
            "type": "function",
            "params": ["[", "geometry", ",", "coordinates", "]"]
        },
        "as": "g"
    }
},
{
    "transform": "move",
    "parameters":
    {
        "col": ["type", "coordinates", "geometry", "g"],
        "position": "after",
        "after": "{featureOfInterest.location}"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "geometry",
        "action": "Drop"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["g", "geometry"]
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "type",
        "action": "Drop"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value": "FeatureCollection",
        "as": "type"
    }
},
{
    "transform": "move",
    "parameters":
    {
        "col": "type",
        "position": "after",
        "after": "{featureOfInterest.location}"
    }
},
{
    "transform": "settype",
    "parameters":
    {
        "col": "geometry",
        "type": "Map"
    }
},
{
    "transform": "settype",
    "parameters":
    {
        "col": "geometry",
        "type": "String"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value":
        {
            "type": "function",
            "params": ["[", "geometry", ",", "}", "]", ","]
        },
        "as": "geometry1"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "geometry",
        "action": "Drop"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["geometry1", "geometry"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{location.locationDetails.mobileProperties.latitude}", "latitude"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{location.locationDetails.mobileProperties.longitude}", "longitude"]
    }
},
{
    "transform": "replacepatterns",
    "parameters":
    {
        "col": ["{observation.resultCategoryObservation.phenomenonTime}", "{observation.resultCategoryObservation.submitTime}"],
        "with": "on"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{dataStream.name}", "dataStreamName"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{dataStream.description}", "dataStreamDescription"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{dataStream.observationType}", "dataStreamObsType"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{dataStream.unitOfCategory}", "dataStreamUniCategory"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observation.projectObservationUID}", "observationProObsUID"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observation.resultCategoryObservation.phenomenonTime}", "observationResCatObsPheTime"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observation.resultCategoryObservation.resultTime}", "observationResCatObsResTime"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observation.resultCategoryObservation.result}", "observationResCatObsResult"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observation.resultCategoryObservation.submitTime}", "observationResCatObsSubTime"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observation.image.imageStatus}", "observationImaImaResult"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["observationImaImaResult", "observationImaImaStatus"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observation.image.imageResult}", "observationImaImaResult"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observation.context.parameters}", "observationConParameters"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{omProcess.license.licenseName}", "omProcessLicLicName"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{omProcess.license.licenseURI}", "omProcessLicLicURI"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{omProcess.license.licenseAttributionSource}", "omProcessLicLicAttSource"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{omProcess.license.licenseAttributionAggregator}", "omProcessLicLicAttAggregator"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{omProcess.processType}", "omPrcoessProType"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{omProcess.processReference}", "omProcessProReference"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{omProcess.resultQuality.validationStatus}", "omPrcoessResQuaValStatus"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{omProcess.resultQuality.validationMethod}", "omPrcoessResQuaValMethod"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{omProcess.resultQuality.validationResult}", "omPrcoessResQuaValResult"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{omProcess.resultQuality.qualityGrade}", "omPrcoessResQuaQuaGrade"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observedProperty.name}", "observedProName"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observedProperty.description}", "observedProDescription"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{observedProperty.definition}", "observedProDefinition"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{sensor.name}", "sensorName"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{sensor.description}", "sensorDescription"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{sensor.encodingType}", "sensorEncType"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{location.name}", "locationName"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{location.description}", "locationDescription"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{location.encodingType}", "locationEncType"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{thing.name}", "thingName"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{thing.description}", "thingDescription"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{featureOfInterest.name}", "featureIntName"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{featureOfInterest.description}", "featureIntDescription"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{featureOfInterest.encodingType}", "featureIntEncType"]
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["{featureOfInterest.location}", "featureIntLocation"]
    }
},
{
    "transform": "unnest",
    "parameters":
    {
        "col": "observationResCatObsResult",
        "keys": ["[\"Identified by Machine\"]", "[\"Indentified by Human\"]", "Type"],
        "pluck": "markLineage"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["Type1", "obsResCatObsResult_Type"]
    }
},
{
    "transform": "move",
    "parameters":
    {
        "col": ["obsResCatObsResult_Type", "{Indentified by Human}", "{Identified by Machine}"],
        "position": "after",
        "after": "observationResCatObsResult"
    }
},
{
    "transform": "unnest",
    "parameters":
    {
        "col": "observationConParameters",
        "keys": ["[\"Aegypti Certainty\"]", "[\"Tiger Certainty\"]"],
        "pluck": "markLineage"
    }
},
{
    "transform": "splitpatterns",
    "parameters":
    {
        "col": "observationResCatObsResTime",
        "type": "on",
        "on": "."
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "observationResCatObsResTime2",
        "action": "Drop"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["observationResCatObsResTime1", "observationResCatObsResTime"]
    }
},
{
    "transform": "nest",
    "parameters":
    {
        "col": ["nuts_2", "nuts_3", "site_cat"],
        "into": "map",
        "as": "misc"
    }
},
{
    "transform": "derive",
    "parameters":
    {
        "type": "single",
        "value":
        {
            "type": "function",
            "params": ["[", "sensorDescription", ",", "misc", "]", ",", " \"misc\": "]
        },
        "as": "column1"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "sensorDescription",
        "action": "Drop"
    }
},
{
    "transform": "rename",
    "parameters":
    {
        "type": "manual",
        "mapping": ["column1", "sensorDescription"]
    }
},
{
    "transform": "move",
    "parameters":
    {
        "col": "sensorDescription",
        "position": "after",
        "after": "sensorName"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "observationConParameters",
        "action": "Drop"
    }
},
{
    "transform": "nest",
    "parameters":
    {
        "col": ["{Aegypti Certainty}", "{Tiger Certainty}", "site_cat", "nuts_3", "nuts_2"],
        "into": "map",
        "as": "observationConParameters"
    }
},
{
    "transform": "move",
    "parameters":
    {
        "col": "observationConParameters",
        "position": "after",
        "after": "observationImaImaResult"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": ["site_cat", "nuts_3", "nuts_2"],
        "action": "Drop"
    }
},
{
    "transform": "nest",
    "parameters":
    {
        "col": ["ia_filter_1", "ia_filter_2"],
        "into": "map",
        "as": "misc 2"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "ia_filter_1",
        "action": "Drop"
    }
},
{
    "transform": "drop",
    "parameters":
    {
        "col": "ia_filter_2",
        "action": "Drop"
    }
}]